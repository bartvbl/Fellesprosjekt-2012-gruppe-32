/*
 * CalendarView.java
 */

package prototype.calendarApp.views;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Insets;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;

import prototype.calendarApp.core.Main;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 * The application's main frame.
 */
public class CalendarView extends FrameView {

	public static JTextPane searchTextPane;


	public CalendarView(SingleFrameApplication app) {
		super(app);

		initComponents();
		searchPanel.setLayout(new BorderLayout());
		JTextPane searchTextPane = new JTextPane();
		searchTextPane.setBorder(null);
		searchTextPane.setPreferredSize(new Dimension(230, 18));
		this.searchTextPane = searchTextPane;
		new TestPanel(this.getFrame());
		searchPanel.add(searchTextPane, BorderLayout.CENTER);
		JLabel searchIcon = new JLabel();
		searchIcon.setIcon(new ImageIcon("res/search.png"));
		searchIcon.setPreferredSize(new Dimension(18, 18));
		searchPanel.add(searchIcon, BorderLayout.EAST);
		peopleListScrollPane.setBorder(null);
		appointmentsScrollPane.setBorder(null);
		new FrameResizer(this.getFrame());
		new Main();
	}

	@Action
	public void showAboutBox() {
		if (aboutBox == null) {
			JFrame mainFrame = CalendarApp.getApplication().getMainFrame();
			aboutBox = new CalendarAboutBox(mainFrame);
			aboutBox.setLocationRelativeTo(mainFrame);
		}
		CalendarApp.getApplication().show(aboutBox);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        mainLayeredPane = new javax.swing.JLayeredPane();
        mainPanel = new javax.swing.JPanel();
        monthNameLabel = new javax.swing.JLabel();
        calendarTableScrollPane = new javax.swing.JScrollPane();
        calendarTable = new javax.swing.JTable();
        nextMonthButton = new javax.swing.JButton();
        previousMonthButton = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        pendingInvitationsButton = new javax.swing.JToggleButton();
        todayButton = new javax.swing.JButton();
        utilitiesPanel = new javax.swing.JPanel();
        favouritesLabel = new javax.swing.JLabel();
        smallCalendar1 = new SmallCalendar();
        favouritesTabbedPane = new javax.swing.JTabbedPane();
        peopleListScrollPane = new javax.swing.JScrollPane();
        favouritePeopleList = new javax.swing.JList();
        appointmentsScrollPane = new javax.swing.JScrollPane();
        favouriteAppointmentsScrollPane = new javax.swing.JList();

        menuBar.setName("menuBar"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(prototype.calendarApp.views.CalendarApp.class).getContext().getResourceMap(CalendarView.class);
        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(prototype.calendarApp.views.CalendarApp.class).getContext().getActionMap(CalendarView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        mainLayeredPane.setName("mainLayeredPane"); // NOI18N

        mainPanel.setName("mainPanel"); // NOI18N

        monthNameLabel.setFont(resourceMap.getFont("monthNameLabel.font")); // NOI18N
        monthNameLabel.setText(resourceMap.getString("monthNameLabel.text")); // NOI18N
        monthNameLabel.setName("monthNameLabel"); // NOI18N

        calendarTableScrollPane.setName("calendarTableScrollPane"); // NOI18N

        calendarTable.setModel(new DateCellTableModel());
        calendarTable.setName("calendarTable"); // NOI18N
        calendarTable.setRowSelectionAllowed(false);
        calendarTable.setUpdateSelectionOnSort(false);
        calendarTableScrollPane.setViewportView(calendarTable);

        nextMonthButton.setText(resourceMap.getString("nextMonthButton.text")); // NOI18N
        nextMonthButton.setName("nextMonthButton"); // NOI18N

        previousMonthButton.setText(resourceMap.getString("previousMonthButton.text")); // NOI18N
        previousMonthButton.setName("previousMonthButton"); // NOI18N

        searchPanel.setBackground(resourceMap.getColor("searchPanel.background")); // NOI18N
        searchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("searchPanel.border.lineColor"))); // NOI18N
        searchPanel.setName("searchPanel"); // NOI18N

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 269, Short.MAX_VALUE)
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        pendingInvitationsButton.setIcon(resourceMap.getIcon("pendingInvitationsButton.icon")); // NOI18N
        pendingInvitationsButton.setText(resourceMap.getString("pendingInvitationsButton.text")); // NOI18N
        pendingInvitationsButton.setName("pendingInvitationsButton"); // NOI18N

        todayButton.setText(resourceMap.getString("todayButton.text")); // NOI18N
        todayButton.setName("todayButton"); // NOI18N

        utilitiesPanel.setName("utilitiesPanel"); // NOI18N
        utilitiesPanel.setPreferredSize(new java.awt.Dimension(255, 376));

        favouritesLabel.setFont(resourceMap.getFont("favouritesLabel.font")); // NOI18N
        favouritesLabel.setIcon(resourceMap.getIcon("favouritesLabel.icon")); // NOI18N
        favouritesLabel.setText(resourceMap.getString("favouritesLabel.text")); // NOI18N
        favouritesLabel.setName("favouritesLabel"); // NOI18N

        smallCalendar1.setName("smallCalendar1"); // NOI18N
        smallCalendar1.setPreferredSize(new java.awt.Dimension(247, 176));

        favouritesTabbedPane.setName("favouritesTabbedPane"); // NOI18N
        favouritesTabbedPane.setPreferredSize(new java.awt.Dimension(263, 159));

        peopleListScrollPane.setName("peopleListScrollPane"); // NOI18N

        favouritePeopleList.setModel(new DefaultListModel());
        favouritePeopleList.setName("favouritePeopleList"); // NOI18N
        peopleListScrollPane.setViewportView(favouritePeopleList);

        favouritesTabbedPane.addTab(resourceMap.getString("peopleListScrollPane.TabConstraints.tabTitle"), peopleListScrollPane); // NOI18N

        appointmentsScrollPane.setName("appointmentsScrollPane"); // NOI18N

        favouriteAppointmentsScrollPane.setModel(new DefaultListModel());
        favouriteAppointmentsScrollPane.setName("favouriteAppointmentsScrollPane"); // NOI18N
        appointmentsScrollPane.setViewportView(favouriteAppointmentsScrollPane);

        favouritesTabbedPane.addTab(resourceMap.getString("appointmentsScrollPane.TabConstraints.tabTitle"), appointmentsScrollPane); // NOI18N

        javax.swing.GroupLayout utilitiesPanelLayout = new javax.swing.GroupLayout(utilitiesPanel);
        utilitiesPanel.setLayout(utilitiesPanelLayout);
        utilitiesPanelLayout.setHorizontalGroup(
            utilitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utilitiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(favouritesLabel))
            .addComponent(smallCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
            .addComponent(favouritesTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
        );
        utilitiesPanelLayout.setVerticalGroup(
            utilitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utilitiesPanelLayout.createSequentialGroup()
                .addComponent(smallCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(favouritesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(favouritesTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(utilitiesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(monthNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addComponent(previousMonthButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextMonthButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 363, Short.MAX_VALUE)
                        .addComponent(pendingInvitationsButton)
                        .addContainerGap())
                    .addComponent(calendarTableScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(utilitiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(calendarTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(previousMonthButton)
                            .addComponent(todayButton)
                            .addComponent(nextMonthButton)
                            .addComponent(pendingInvitationsButton))))
                .addContainerGap())
        );

        mainPanel.setBounds(0, 0, 850, 450);
        mainLayeredPane.add(mainPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        setComponent(mainLayeredPane);
        setMenuBar(menuBar);
    }// </editor-fold>

    // Variables declaration - do not modify
    public static javax.swing.JScrollPane appointmentsScrollPane;
    public static javax.swing.JTable calendarTable;
    public static javax.swing.JScrollPane calendarTableScrollPane;
    public static javax.swing.JList favouriteAppointmentsScrollPane;
    public static javax.swing.JList favouritePeopleList;
    public static javax.swing.JLabel favouritesLabel;
    public static javax.swing.JTabbedPane favouritesTabbedPane;
    public static javax.swing.JLayeredPane mainLayeredPane;
    public static javax.swing.JPanel mainPanel;
    public static javax.swing.JMenuBar menuBar;
    public static javax.swing.JLabel monthNameLabel;
    public static javax.swing.JButton nextMonthButton;
    public static javax.swing.JToggleButton pendingInvitationsButton;
    public static javax.swing.JScrollPane peopleListScrollPane;
    public static javax.swing.JButton previousMonthButton;
    public static javax.swing.JPanel searchPanel;
    public static SmallCalendar smallCalendar1;
    public static javax.swing.JButton todayButton;
    public static javax.swing.JPanel utilitiesPanel;
    // End of variables declaration


    private JDialog aboutBox;
}